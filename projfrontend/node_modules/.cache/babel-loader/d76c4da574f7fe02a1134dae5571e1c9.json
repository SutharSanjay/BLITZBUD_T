{"ast":null,"code":"var _jsxFileName = \"/Users/sanjay/Desktop/Blitzbud/projfrontend/src/admin/UpdateManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./AdminDashboard.css\";\nimport { isAuthenticated } from \"../auth/index\";\nimport Menu from \"../core/Menu\";\nimport admin from \"../admin2.png\";\nimport { getManager, updateManager } from \"./helper/adminapicall\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateManager = ({\n  match\n}) => {\n  _s();\n\n  const managerID = match.params.managerID;\n  const {\n    token,\n    user: {\n      _id\n    }\n  } = isAuthenticated();\n  const [values, setvalues] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    loading: false,\n    error: \"\",\n    didredirect: false,\n    updatedmanager: \"\"\n  });\n  const {\n    firstname,\n    lastname,\n    email,\n    loading,\n    error,\n    didredirect,\n    updatedmanager\n  } = values;\n  useEffect(() => {\n    preload(match.params.managerID, _id, token);\n  }, []);\n\n  const onSubmit = (event, managerID, _id, token) => {\n    event.preventDefault();\n    setvalues({ ...values,\n      error: \"\",\n      loading: true\n    });\n    console.log(managerID, _id, token);\n    updateManager(managerID, _id, token).then(data => {\n      if (data.error) {\n        setvalues({ ...values,\n          error: data.error,\n          loading: false\n        });\n      } else {\n        setvalues({ ...values,\n          firstname: \"\",\n          lastname: \"\",\n          email: \"\",\n          loading: false,\n          error: \"\",\n          didredirect: false,\n          updatedmanager: data.firstname\n        });\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const preload = (managerID, _id, token) => {\n    getManager(match.params.managerID, _id, token).then(data => {\n      if (data.error) {\n        setvalues({ ...values,\n          error: data.error\n        });\n      } else {\n        console.log(data.firstname);\n        setvalues({ ...values,\n          firstname: data.firstname,\n          lastname: data.lastname,\n          email: data.email\n        });\n      }\n    });\n  };\n\n  const handlechange = name => event => {\n    setvalues({ ...values,\n      [name]: event.target.value\n    });\n  };\n\n  const successMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: updatedmanager ? \"\" : \"none\"\n      },\n      className: \"success-manager\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [updatedmanager, \" Updated Successfully\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  };\n\n  const errorMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      className: \"error-manager\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  };\n\n  const leftSide = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logoname\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontFamily: 'Trebuchet MS',\n            color: \"rgb(22, 167, 157)\"\n          },\n          children: \"Blitzhud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"admin\",\n          exact: true,\n          to: \"/admin/dashboard\",\n          activeStyle: {\n            backgroundColor: \"rgba(245, 245, 245,.15)\"\n          },\n          style: {\n            textDecoration: 'none',\n            color: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: admin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 181\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [firstname, lastname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 200\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          exact: true,\n          to: \"/admin/manager\",\n          activeStyle: {\n            backgroundColor: \"rgba(245, 245, 245,.15)\"\n          },\n          style: {\n            textDecoration: 'none',\n            color: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Manage Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 161\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  };\n\n  const rightSide = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Update Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), successMessage(), errorMessage(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_right\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"input-manager\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"FirstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: firstname,\n            onChange: handlechange(\"firstname\"),\n            required: true,\n            type: \"text\",\n            name: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: lastname,\n            onChange: handlechange(\"lastname\"),\n            required: true,\n            type: \"text\",\n            name: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: email,\n            onChange: handlechange(\"email\"),\n            required: true,\n            type: \"text\",\n            name: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSubmit,\n            className: \"update-btn-manager\",\n            type: \"button\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin_main\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), leftSide(), rightSide()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateManager, \"926nIAuCbfzvF0keDacWsT/5Vwg=\");\n\n_c = UpdateManager;\nexport default UpdateManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateManager\");","map":{"version":3,"sources":["/Users/sanjay/Desktop/Blitzbud/projfrontend/src/admin/UpdateManager.js"],"names":["React","useState","useEffect","NavLink","isAuthenticated","Menu","admin","getManager","updateManager","UpdateManager","match","managerID","params","token","user","_id","values","setvalues","firstname","lastname","email","loading","error","didredirect","updatedmanager","preload","onSubmit","event","preventDefault","console","log","then","data","catch","err","handlechange","name","target","value","successMessage","display","errorMessage","leftSide","fontFamily","color","backgroundColor","textDecoration","rightSide"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport \"./AdminDashboard.css\"\nimport {isAuthenticated} from \"../auth/index\"\nimport Menu from \"../core/Menu\"\nimport admin from \"../admin2.png\"\nimport { getManager, updateManager } from \"./helper/adminapicall\"\n\n\nconst UpdateManager = ({match}) => {\n\n    const managerID = match.params.managerID\n\n    const{token,user:{_id}} = isAuthenticated()\n\n    const [values, setvalues] = useState({\n        firstname:\"\",\n        lastname:\"\",\n        email:\"\",\n        loading:false,\n        error:\"\",\n        didredirect:false,\n        updatedmanager:\"\",\n\n    })\n\n    const {firstname,lastname,email,loading,error,didredirect,updatedmanager} = values\n\n    useEffect(() => {\n        preload(match.params.managerID,_id,token)  \n    }, [])\n\n    const onSubmit = (event,managerID,_id,token)=>{\n        event.preventDefault()\n        setvalues({...values,error:\"\",loading:true})\n        console.log(managerID,_id,token)\n        updateManager(managerID,_id,token)\n        .then(data=>{\n            if (data.error) {\n                setvalues({...values,error:data.error,loading:false})\n            }\n            else{\n                setvalues({\n                    ...values,\n                    firstname:\"\",\n                    lastname:\"\",\n                    email:\"\",\n                    loading:false,\n                    error:\"\",\n                    didredirect:false,\n                    updatedmanager:data.firstname,\n                })\n            }\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const preload = (managerID,_id,token)=>{\n        getManager(match.params.managerID,_id,token)\n        .then(data=>{\n            if (data.error) {\n                setvalues({...values,error:data.error,})\n            }\n            else{\n                console.log(data.firstname)\n                setvalues({\n                    ...values,\n                    firstname:data.firstname,\n                    lastname:data.lastname,\n                    email:data.email,\n                })\n            }\n        })\n        \n    }\n\n    const handlechange = name =>event =>{\n        setvalues({...values,[name]:event.target.value})\n           }\n\n    const successMessage =()=>{\n        return(\n            <div style={{display: updatedmanager ? \"\" : \"none\"}} className=\"success-manager\">\n                <h5>{updatedmanager} Updated Successfully</h5>\n            </div>\n        )\n    }\n\n    const errorMessage =()=>{\n        return(\n            <div style={{display: error ? \"\" : \"none\"}} className=\"error-manager\">\n                <h5>{error}</h5>\n            </div>\n        )\n    }\n\n    const leftSide = () => {\n        return(\n            <div className=\"leftSide\">\n                <span className=\"logoname\">\n                    <h1 style={{fontFamily:'Trebuchet MS',color:\"rgb(22, 167, 157)\"}}>Blitzhud</h1>\n                </span>\n                 <ul>\n                 <NavLink className=\"admin\" exact to=\"/admin/dashboard\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><img src={admin} /><p>{firstname}{lastname}</p></NavLink>\n                 <NavLink exact to=\"/admin/manager\" activeStyle={{backgroundColor:\"rgba(245, 245, 245,.15)\"}} style={{ textDecoration: 'none' ,color :\"white\"}}><li>Manage Product</li></NavLink>\n                </ul>\n            </div>\n        )\n    }\n\nconst rightSide = () => {\n        return(\n            <div className=\"rightSide\">\n                <div>\n                    <h2>Update Manager</h2>\n                </div>\n                {successMessage()}\n                {errorMessage()}\n                <div className=\"main_right\">\n                    <form className=\"input-manager\">\n                            <label>FirstName</label>\n                                <input value={firstname} onChange={handlechange(\"firstname\")}  required type=\"text\" name=\"\" />\n                                <br />\n                            <label>Lastname</label>\n                                <input  value={lastname} onChange={handlechange(\"lastname\")} required type=\"text\" name=\"\" />\n                                <br />\n                                <label>Email</label>\n                                    <input  value={email} onChange={handlechange(\"email\")} required type=\"text\" name=\"\" />\n                                <br />\n                                <button onClick={onSubmit} className=\"update-btn-manager\" type=\"button\">Update</button>\n                            </form>\n\n                </div>\n            </div>\n        )\n    }\n\n\n    return(\n        <div className=\"admin_main\">\n            <Menu />\n            {leftSide()}\n            {rightSide()}\n        </div>\n    )\n}\n\nexport default UpdateManager"]},"metadata":{},"sourceType":"module"}
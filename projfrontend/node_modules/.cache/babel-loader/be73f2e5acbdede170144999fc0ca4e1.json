{"ast":null,"code":"var _jsxFileName = \"/Users/sanjay/Desktop/Blitzbud/projfrontend/src/auth/PrivateRoute.js\";\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/signin\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/sanjay/Desktop/Blitzbud/projfrontend/src/auth/PrivateRoute.js"],"names":["React","Redirect","Route","isAuthenticated","PrivateRoute","component","Component","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAiBC,KAAjB,QAA6B,kBAA7B;AACA,SAAQC,eAAR,QAA8B,SAA9B;;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAGC,SAAd;AAAyB,KAAGC;AAA5B,CAAD,KAAwC;AACzD,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAK,IACZL,eAAe,kBACb,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YADa,gBAGb,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAE,SADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlBH;;KAAMR,Y;AAqBJ,eAAeA,YAAf","sourcesContent":["import React from \"react\"\nimport {Redirect,Route} from \"react-router-dom\"\nimport {isAuthenticated} from \"./index\"\n \n\nconst PrivateRoute = ({ component : Component, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={ props =>\n          isAuthenticated() ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/signin\",\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n\n  export default PrivateRoute;"]},"metadata":{},"sourceType":"module"}